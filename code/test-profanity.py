import profanity

TEST_MESSAGES = [
  ("dating sim", False),
  ("Endlich hat Nils keinen unfairen Pingvorteil mehr.", False),
  ("YOOOO DIE PRODUCTION VALUE", False),
  ("Penis", True),
  ("hilarious", False),
  ("Awww wie süß das gemacht ist oh mein gooooott", False),
  ("Bummelchen staying true to his name", False),
  ("cuuute", False),
  ("Los Lisa!", False),
  ("<3", False),
  ("Die andere Person kennen ist kein Wissen?", False),
  ("Yooo Banger Frage.", False),
  ("Fuck!", True),
  ("Bekommt das andere Team die gleichen Fragen?", False),
  ("Da ist ja ein Ufo", False),
  ("tze", False),
  ("Jedenfalls nicht die genauen Fragen.", False),
  ("Okay gut", False),
  ("Ihr seid solche Pimmel", True),
  ("Dummer Wichser", True),
  ("So wie Simsala...", False),
  ("Ich weiß, was ich bei sowas grundsätzlich NICHT wählen würde.", False),
  ("Telekinese kommt mir witzlos vor", False),
  ("Ihr Hurensöhne", True),
  ("hahaha", False),
  ("l", False),
  ("Connor würde so 20cm überm boden fliegen", False),
  ("Schweben statt fliegen", False),
  ("Wixa", True),
  ("Bina, muss ich jetzt aufpassen, wie viel ich das kommentiere?", False),
  ("Okay!", False),
  ("Warum spendet ihr für so einen Terroristenverein?", True),
  ("kommentier cocas beziehung", False),
  ("Die fragen sind soooo gut", False),
  ("Das ist jetzt so der Minimus Threshhold, richtig?", False),
  ("Okay ja dann mehrere Billionen", False),
  ("ach geld", False),
  ("nigger", True),
  ("Wie viel Spielraum gibt es da?", False),
  ("Kannst mir nicht erzählen, dass du das nicht für 100 Millionen machen würdest.", False),
  ("Altan hat vergessen, Nigeria aufzuzählen.", False),
  ("Niga", True),
  ("Ich habe wenig auf dem Plan", False),
  ("YOOOOOOO", False),
  ("Jesko fair enough", False),
  ("wie wird das jetzt gewertet", False),
  ("aaaawwww", False),
  ("OMG", False),
  ("Awwwwww Emsaaaaa", False),
  ("Ich finde das TOTAL fair", False),
  ("Das muss zählen.", False),
  ("Hahahahahaha", False),
  ("F I C K F O T Z E", True),
  ("Okay, das ist jetzt schwer.", False),
  ("Also liegt Sven um ne Mille daneben?", False),
  ("So umrechnen", False),
  ("richtig umgewandelt", False),
  ("undefined", False),
  ("Mmn haben nur luca und connor die frage ncht invalide beantwortet", False),
  ("f̴̙̾͠ḯ̷͓̔c̷͚̟͊k̴̛̹͠e̶̹̒ṇ̴͛̕", True),
  ("Neeeeiiiiin", False),
  ("Liebe muss gewinnen", False),
  ("gar kein geld ist halt echt ein einfacherer pick als literally jeder messbare unterschied", False),
  ("Zigeunerschnitzel", True),
  ("Nutt3ns0hn", True),
  ("crazy discussion", False),
  ("0 würde bedeuten, dass Lisa es unbezahlt machen würde", False),
  ("An diesem Tag hat Liebe verloren", False),
  ("N1664", True),
  ("One morning, when Gregor Samsa woke from troubled dreams, he found himself transformed in his bed into a horrible vermin.", False),
  ("He lay on his armour-like back, and if he lifted his head a little he could see his brown belly, slightly domed and divided by arches into stiff sections.", False),
  ("The bedding was hardly able to cover it and seemed ready to slide off any moment.", False),
  ("His many legs, pitifully thin compared with the size of the rest of him, waved about helplessly as he looked.", False),
  ("Whats happened to me?  he thought. It wasnt a dream.", False),
  ("His room, a proper human room although a little too small, lay peacefully between its four familiar walls.", False),
  ("A collection of textile samples lay spread out on the table - Samsa was a travelling salesman", False),
  ("and above it there hung a picture that he had recently cut out of an illustrated magazine and housed in a nice, gilded frame.", False),
  ("It showed a lady fitted out with a fur hat and fur boa who sat upright, raising a heavy fur muff that covered the whole of her lower arm towards the viewer.", False),
  ("Gregor then turned to look out the window at the dull weather.", False),
  ("Drops of rain could be heard hitting the pane, which made him feel quite sad.", False),
  ("How about if I sleep a little bit longer and forget all this nonsense, he thought, but that was something", False),
  ("he was unable to do because he was used to sleeping on his right, and in his present state couldnt get into that position.", False),
  ("However hard he threw himself onto his right, he always rolled back to where he was.", False),
  ("He must have tried it a hundred times, shut his eyes so that he wouldnt have to look at the floundering legs", False),
  ("and only stopped when he began to feel a mild, dull pain there that he had never felt before.", False),
  ("Oh, God, he thought, what a strenuous career it is that Ive chosen!", False),
  ("Travelling day in and day out.", False),
  ("Doing business like this takes much more effort than doing your own business at home, and on top of that theres the curse of travelling", False),
  ("worries about making train connections, bad and irregular food, contact with different people all the time so", False),
  ("that you can never get to know anyone or become friendly with them.", False),
  ("It can all go to Hell!", False),
  ("He felt a slight itch", False),
  ("The quick, brown fox jumps over a lazy dog. DJs flock by when MTV ax quiz prog.", False),
  ("Junk MTV quiz graced by fox whelps. Bawds jog, flick quartz, vex nymphs.", False),
  ("Waltz, bad nymph, for quick jigs vex! Fox nymphs grab quick-jived waltz.", False),
  ("Brick quiz whangs jumpy veldt fox. Bright vixens jump; dozy fowl quack.", False),
  ("Quick wafting zephyrs vex bold Jim. Quick zephyrs blow, vexing daft Jim.", False),
  ("Sex-charged fop blew my junk TV quiz. How quickly daft jumping zebras vex.", True),
  ("Two driven jocks help fax my big quiz. Quick, Baz, get my woven flax jodhpurs!", False),
  ("Now fax quiz Jack!  my brave ghost pled. Five quacking zephyrs jolt my wax bed.", False),
  ("Flummoxed by job, kvetching W. zaps Iraq. Cozy sphinx waves quart jug of bad milk.", False),
  ("A very bad quack might jinx zippy fowls. Few quips galvanized the mock jury box.", False),
  ("Quick brown dogs jump over the lazy fox. The jay, pig, fox, zebra, and my wolves quack!", False),
  ("Blowzy red vixens fight for a quick jump. Joaquin Phoenix was gazed by MTV for luck.", False),
  ("A wizard’s job is to vex chumps quickly in fog. Watch Jeopardy!", False),
  (", Alex Trebeks fun TV quiz game. Woven silk pyjamas exchanged for blue quartz.", False),
  ("Brawny gods just flocked up to quiz and vex him.", False),
  ("Adjusting quiver and bow, Zompyc[1] killed the fox.", False),
  ("My faxed joke won a pager in the cable TV quiz show. Amazingly few discotheques provide jukeboxes.", False),
  ("My girl wove six dozen plaid jackets before she quit.", False),
  ("Six big devils from Japan quickly forgot how to waltz.", False),
  ("Big July earthquakes confound zany experimental vow. Foxy parsons quiz and cajole the lovably dim wiki-girl.", False),
  ("Have a pick: twenty six letters - no forcing a jumbled quiz!", False),
  ("Crazy Fredericka bought many very exquisite opal jewels. Sixty zippers were quickly picked from the woven jute bag.", False),
  ("A quick movement of the enemy will jeopardize six gunboats. All questions asked by five watch experts amazed the judge.", False),
  ("Jack quietly moved up front and seized the big ball of wax. The quick, brown fox jumps over a lazy dog.", False),
  ("DJs flock by when MTV ax quiz prog. Junk MTV quiz graced by fox whelps. Bawds jog, flick quartz, vex nymphs.", False),
  ("Waltz, bad nymph, for quick jigs vex! Fox nymphs grab quick-jived waltz. Brick quiz whangs jumpy veldt fox.", False),
  ("Bright vixens jump; dozy fowl quack. Quick wafting zephyrs vex bold Jim. Quick zephyrs blow, vexing daft Jim. Sex-charged fop blew my ", True),
  ("Ihr habt alle sex.", True),
  ("Ihr habt alle sex!", True)
]

DEV_TEST = [
  ("Fotze", True)
]

if __name__ == '__main__':  
  test_set = TEST_MESSAGES
  total_tests = len(test_set)
  correct_results = 0

  for (message, expected_result) in test_set:
    bad_word = profanity.findBadWord(message)
    if (bad_word is None) is expected_result:
      print(f'Expected {"" if expected_result else "no "}profanity in message "{message}" but found {"none" if bad_word is None else f"{bad_word}"}')
    else:
      correct_results += 1
  
  accuracy = correct_results / total_tests
  print("Test completed")
  print(f"Results: {correct_results}/{total_tests} correct")
  print(f"Accuracy: {accuracy:.2%}")